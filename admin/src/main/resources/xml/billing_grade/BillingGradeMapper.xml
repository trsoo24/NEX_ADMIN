<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.admin.billing_grade.mapper.BillingGradeMapper">
    <select id="generateBillingGrade" parameterType="com.example.admin.billing_grade.dto.GetBillingGradeDto" resultType="com.example.admin.billing_grade.dto.BillingGrade">
        WITH BASE_DATA AS (
            SELECT
                TO_CHAR(CREATE_DT, 'yyyyMM') AS statYyMm,
                (CASE
                     WHEN CUST_GRD_CD IS NULL OR CUST_GRD_CD = '0' THEN 'E'
                     ELSE CUST_GRD_CD
                    END) AS CUST_GRD_CD,
                SUM(CASE WHEN API_TYPE = 'B' THEN AMOUNT ELSE 0 END) AS CHARGE,
                SUM(CASE WHEN API_TYPE = 'C' THEN AMOUNT ELSE 0 END) AS REVERSAL,
                SUM(CASE WHEN API_TYPE = 'R' THEN AMOUNT ELSE 0 END) AS REFUND,
                COUNT(DISTINCT CTN) AS ACE_CNT,
                COUNT(*) AS CNT,
                BAN_UNPAID_YN_CODE
            FROM TB_API_LOGS
            WHERE
                CREATE_DT BETWEEN TO_DATE(#{firstDay}, 'YYYYMMDDHH24MISS') AND TO_DATE(#{lastDay}, 'YYYYMMDDHH24MISS')
              AND RESULT_CODE = #{resultCode}
              AND API_TYPE IN ('B', 'C', 'R')
            GROUP BY TO_CHAR(CREATE_DT, 'yyyyMM'),
                     (CASE WHEN CUST_GRD_CD IS NULL OR CUST_GRD_CD = '0' THEN 'E' ELSE CUST_GRD_CD END),
                     BAN_UNPAID_YN_CODE)
        SELECT
            A.CUST_GRD_CD AS custGrdCd,
            A.statYyMm AS statYyMm,
            TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS regDt,
            NVL(SUM(A.CHARGE), 0) - NVL(SUM(A.REVERSAL), 0) - NVL(SUM(A.REFUND), 0) AS allAmount,
            NVL(SUM(A.ACE_CNT), 0) AS allAceCnt,
            NVL(SUM(A.CNT), 0) AS allCnt,
            NVL(SUM(P.CHARGE), 0) - NVL(SUM(P.REVERSAL), 0) - NVL(SUM(P.REFUND), 0) AS paidAmount,
            NVL(SUM(P.ACE_CNT), 0) AS paidAceCnt,
            NVL(SUM(P.CNT), 0) AS paidCnt,
            NVL(SUM(U.CHARGE), 0) - NVL(SUM(U.REVERSAL), 0) - NVL(SUM(U.REFUND), 0) AS unpaidAmount,
            NVL(SUM(U.ACE_CNT), 0) AS unpaidAceCnt,
            NVL(SUM(U.CNT), 0) AS unpaidCnt
        FROM BASE_DATA A
                 LEFT JOIN BASE_DATA P
                           ON A.CUST_GRD_CD = P.CUST_GRD_CD AND P.BAN_UNPAID_YN_CODE = #{paid}
                 LEFT JOIN BASE_DATA U
                           ON A.CUST_GRD_CD = U.CUST_GRD_CD AND U.BAN_UNPAID_YN_CODE = #{unpaid}
        GROUP BY A.CUST_GRD_CD, A.statYyMm
    </select>
</mapper>